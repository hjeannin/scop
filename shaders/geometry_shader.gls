#version 410

layout(triangles) in;
layout(triangle_strip, max_vertices = 3) out;
uniform float		color;

in vec2 vertex_tex_coord[];

out vec3 geometry_color;
out vec2 geometry_tex_coord;

void main()
{
	float		grey;

	if (color == 1.0f)
	{
		grey = 0.07 * (gl_in[0].gl_Position.z - gl_in[0].gl_ClipDistance[0]);
		geometry_color = vec3(grey, grey, grey);
	}
	else
	{
	grey = gl_in[0].gl_Position.x + 
		   gl_in[1].gl_Position.y +
		   gl_in[2].gl_Position.z +
		   gl_in[1].gl_Position.x -
		   gl_in[2].gl_Position.y -
		   gl_in[0].gl_Position.z -
		   gl_in[2].gl_Position.x +
		   gl_in[0].gl_Position.y +
		   gl_in[1].gl_Position.z;
	while (grey >= 0.7)
	   grey = grey - 1.0;
	while (grey <= 0.0)
	   grey = grey + 0.7;
	if (grey <= 0.1)
	   grey = 0.1;
	geometry_color = vec3(grey, grey, grey);
	}

	geometry_tex_coord = vertex_tex_coord[0];
	gl_Position = gl_in[0].gl_Position;
	EmitVertex();

	geometry_tex_coord = vertex_tex_coord[1];
	gl_Position = gl_in[1].gl_Position;
	EmitVertex();

	geometry_tex_coord = vertex_tex_coord[2];
	gl_Position = gl_in[2].gl_Position;
	EmitVertex();

	EndPrimitive();
}